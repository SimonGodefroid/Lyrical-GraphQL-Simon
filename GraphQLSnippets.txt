1# write query/mutation in GraphiQL
2# copy query/mutation to component
3# import gql and graphql
4# connect component to graphql and pass q/m
5# link submittal with q/m



mutation AddLyricToSong($songId:ID!,$content:String){
  addLyricToSong(songId:$songId,content:$content){
    id
    lyrics{
      content
    }
  }
}



/!\
Queries are called automatically
Mutations are called manually


GraphiQL Syntax Query:
######################
query SongQuery($id: ID!) {
  song(id: $id) {
    id
    title
  }
}


GraphiQL Syntax Mutation:
#########################

mutation DeleteSong($id:String){
  deleteSong(id:$id){
   id,title 
  }
}



React mutation call:
####################

onSubmit(event) {
		event.preventDefault();
		this.props
			.mutate({
				variables: {
					title: this.state.title
				}
			})
			.then(() => hashHistory.push('/'));
	}

const mutation = gql`
	mutation AddSong($title: String) {
		addSong(title: $title) {
			title
		}
	}
`;

export default graphql(mutation)(SongCreate);


GraphiQL call a mutation:
#########################
mutation {
	addSong(title:"Dog call"){
    id
    title
	}	
}

==> to call a mutation with query variables in GraphiQL

mutation AddSong($title:String){
	addSong(title:$title){
    id
    title
	}	
}

#Query Variables

{
    "title":"Blue Moon"
}





